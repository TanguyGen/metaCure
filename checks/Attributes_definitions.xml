<?xml version="1.0" encoding="UTF-8"?>
  <mdq:check xmlns:mdq="https://nceas.ucsb.edu/mdqe/v1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="https://nceas.ucsb.edu/mdqe/v1 ../schemas/schema1.xsd">
    <id>attribute.definition</id>
    <name>Definitions for attributes</name>
    <description>Check if each attribute have a definition</description>
    <type>interoperable</type>  
    <level>REQUIRED</level>
    <environment>rscript</environment>
    <code><![CDATA[
  library(ragtop)
  #Check first if attribute are present.
  if (!attributesPresent){
    status = "FAILURE"
    message <-"No attributes were found so unable to check attributes definitions."
  } else{
    attributeCount = 0
    missing = c()
    j=0
    # If only a single value is returned (vs type "list"), then convert to a list
    # for easier processing
    if(length(AttributesDefinitions)==1){
      AttributesDefinitions = list(AttributesDefinitions)
    }
    
    if(length(attributeName)==1){
      attributeName = list(attributeName)
    } 
    for (i in 1:length(AttributesDefinitionsbool)){
      attributeCount = attributeCount+ 1
      if (AttributesDefinitionsbool[i]==F){
        def=NA
      }else{
        j=j+1
        def = AttributesDefinitions[j]
      }
      name = attributeName[i]
      if(is.null(name)){
        name=i
      }
      if(is.blank(def)){
        missing=append(missing,name)
      }
    }
    if(length(missing) == 1){
      message = paste0("This 1 attribute (out of ",attributeCount," attributes) is missing a definition : ", missing[1])
      status = "FAILURE"
      
    }else if(length(missing) > 1 & length(missing) < 5){
      message = paste0("These ",length(missing)," attributes  (out of ",attributeCount," attributes) are missing definitions: ", paste(missing,collapse=","))
      status="FAILURE"
    }else if (length(missing) > 5){
      message = paste0("These ",length(missing)," attributes (out of ",attributeCount," attributes) are missing definitions: ", paste(missing[1:5],collapse=",")," and ",length(missing)-5," other(s)")
      status="FAILURE"
    }else{
      message = "All attributes have definitions specified."
      status = "SUCCESS"
    }
  }
  mdq_result <- list(status = status,
                     output = list(list(value = message)))



]]></code>
  <selector>
  <name>attributesPresent</name>
  <xpath>boolean(
    /eml/dataset/*/attributeList/attribute or
    /eml/dataset/*/attributeList/attribute or
    /*/contentInfo/*/dimension/MD_Band or
    /*/contentInfo/*/dimension/MI_Band)
</xpath>
  </selector>
    <selector>
    <name>AttributesDefinitions</name>
    <xpath>/*[local-name() = 'eml']/dataset//attributeList/attribute/attributeDefinition </xpath>
    </selector>
    <selector>
    <name>AttributesDefinitionsbool</name>
    <xpath>/*[local-name() = 'eml']/dataset//attributeList/attribute </xpath>
  <subSelector>
  <name>scale</name>
  <xpath>
  boolean(./attributeDefinition)
</xpath>
  </subSelector>
  </selector>
  <selector>
  <name>attributeName</name>
  <xpath>
  /eml/dataset/*/attributeList/attribute
</xpath>
  <subSelector>
  <name>name</name>
  <!-- Multiple paths may be present and return values, but we need just one -->
  <xpath>
  ./attributeName/text()[normalize-space()] 
</xpath>
  </subSelector>
  </selector>
  <dialect>
  <name>DataCite 4</name>
  <xpath>boolean(/*[local-name() = 'resource'])</xpath>
  </dialect>
  <dialect>
  <name>Ecological Metadata Language</name>
  <xpath>boolean(/*[local-name() = 'eml'])</xpath>
  </dialect>
  <dialect>
  <name>ISO 19115 and ISO 19115-2 / ISO 19139, ISO 19139-2, ISO 19115-1, ISO 19115-3 </name>
  <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
  </dialect>
  </mdq:check>
  