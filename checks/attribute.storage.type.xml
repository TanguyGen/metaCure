<?xml version="1.0" encoding="UTF-8"?>
  <mdq:check xmlns:mdq="https://nceas.ucsb.edu/mdqe/v1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="https://nceas.ucsb.edu/mdqe/v1 ../schemas/schema1.xsd">
    <id>attribute.storage.type</id>
    <name>Attribute Storage Type</name>
    <description>Each attributes must have a storage type</description>
    <type>interoperable</type>  
    <level>RECOMMENDED</level>
    <environment>rscript</environment>
    <code><![CDATA[
library(ragtop)
#Check first if attribute are present.
if (!attributesPresent){
  status = "WARNING"
  message <-"No attributes were found so unable to check attributes storage types"
} else{
  attributeCount = 0
  missing = c()
  j=0
  # If only a single value is returned (vs type "list"), then convert to a list
  # for easier processing
  if(length(attributeStorage)==1){
    attributeStorage = list(attributeStorage)
  }
  
  if(length(attributeName)==1){
    attributeName = list(attributeName)
  } 
  for (i in 1:length(attributeStoragebool)){
    attributeCount = attributeCount+ 1
    if (attributeStoragebool[i]==F){
      storage=NA
    }else{
      j=j+1
      storage = attributeStorage[j]
    }
    name = attributeName[i]
    if(is.null(name)){
      name=i
    }
    if(is.blank(storage)){
      missing=append(missing,name)
    }
  }
  if(length(missing) == 1){
    message = paste0("This 1 attribute (out of ",attributeCount," attributes) is missing a storage type : ", missing[1])
    status = "FAILURE"
      
  }else if(length(missing) > 1 & length(missing) < 5){
    message = paste0("These ",length(missing)," attributes (out of ",attributeCount,") are missing a storage type: ", paste(missing,collapse=","))
    status="FAILURE"
  }else if (length(missing) > 5){
    message = paste0("These ",length(missing)," attributes (out of ",attributeCount,") are missing a storage type: ", paste(missing[1:5],collapse=",")," and ",length(missing)-5," other(s)")
    status="FAILURE"
  }else{
    message = "All attributes have a storage type specified."
    status = "SUCCESS"
  }
}
mdq_result <- list(status = status,
                   output = list(list(value = message)))



]]></code>
  <selector>
  <name>attributesPresent</name>
  <xpath>boolean(
    /eml/dataset/*/attributeList/attribute or
    /eml/dataset/*/attributeList/attribute or
    /*/contentInfo/*/dimension/MD_Band or
    /*/contentInfo/*/dimension/MI_Band
  )
</xpath>
  </selector>
  <selector>
  <name>attributeStoragebool</name>
  <xpath>
  /*[local-name() = 'eml']/dataset//attributeList/attribute
</xpath>
  <subSelector>
  <name>storagetype</name>
  <xpath>
  boolean(./storageType)
</xpath>
  </subSelector>
  </selector>
  <selector>
  <name>attributeStorage</name>
  <xpath>
  /*[local-name() = 'eml']/dataset//attributeList/attribute/storageType
</xpath>
  </selector>
  <selector>
  <name>attributeName</name>
  <xpath>
  /eml/dataset/*/attributeList/attribute/attributeName
</xpath>
  </selector>
  <dialect>
  <name>DataCite 4</name>
  <xpath>boolean(/*[local-name() = 'resource'])</xpath>
  </dialect>
  <dialect>
  <name>Ecological Metadata Language</name>
  <xpath>boolean(/*[local-name() = 'eml'])</xpath>
  </dialect>
  <dialect>
  <name>ISO 19115 and ISO 19115-2 / ISO 19139, ISO 19139-2, ISO 19115-1, ISO 19115-3 </name>
  <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
  </dialect>
  </mdq:check>
  