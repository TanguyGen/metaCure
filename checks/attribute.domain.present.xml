<?xml version="1.0" encoding="UTF-8"?>
  <mdq:check xmlns:mdq="https://nceas.ucsb.edu/mdqe/v1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="https://nceas.ucsb.edu/mdqe/v1 ../schemas/schema1.xsd">
    <id>entity.attributeDomain.present</id>
    <name>Entity Attribute Domain Present</name>
    <description>Check that an attribute domain is defined for each relevant attribute.</description>
    <type>reusable</type>
    <level>REQUIRED</level>
    <environment>python</environment>
    <code><![CDATA[
      library(ragtop)
      # Check if a measurementScale is present for each attribute.
      if (!attributesPresent){
        message = "No attributes were found so attribute measurement domain cannot be checked."
        status = "FAILURE"
      }else{
        attributeCount = 0
        missing = c()
        maxPrint = 5
        j=0

        
        # If only a single value is returned (vs type "list"), then convert to a list
        # for easier processing
        if(length(attributeDomain)==1){
          attributeDomain = list(attributeDomain)
        }

        
        if(length(attributeName)==1){
          attributeName = list(attributeName)
        }
        
        for (i in 1:length(attributeDomainbool)){
          attributeCount = attributeCount+1
          if (attributeDomainbool[i]==FALSE){
            domain=NA
          }else{
            j=j+1
            domain = attributeDomain[j]
          }
          name = attributeName[i]
          if(is.blank(name)){
            name = paste0("attr",i)
          }
          # No domain for this attribute was specified
          if(is.blank(domain)){
            missing=append(missing,name)
          }
        }
          
        
        if(length(missing) == 1){
          message = paste0("This attribute (of ",attributeCount," total) does not have a measurement domain defined:" ,missing[1],".")
          status = "FAILURE"
        }else if(length(missing) > 1){
          message = paste0("The following ",length(missing)," attributes (of ",attributeCount," total) do not have a measurement domain specified: ",missing[1:maxPrint] ,".")
          if(length(missing) > maxPrint){
            message=paste0(message,"..")
            status = "FAILURE"
          }
        }
        else{
          message = paste0("All ",attributeCount," attributes that require a measurement domain have one defined.")
          status = "SUCCESS"
        }
      }
      mdq_result <- list(status = status,
                         output = list(list(value = message)))
      
      
    ]]></code>
    <selector>
    <name>attributesPresent</name>
    <xpath>boolean(
      /eml/dataset/*/attributeList/attribute or
      /*/contentInfo/*/dimension/MI_Band or
      /*/contentInfo/*/dimension/MD_Band)</xpath>
    </selector>
    <selector>
    <name>attributeDomain</name>
    <xpath>/eml/dataset/*/attributeList/attribute |
    /*/contentInfo/*/dimension/MI_Band |
    /*/contentInfo/*/dimension/MD_Band 
  </xpath>
    <subSelector>
    <!-- if attributes are present, one of these domain types must be present (even dateTimeDomain, which is optional in the EML spec) -->
    <name>domain</name>
    <xpath>
    ./measurementScale/nominal/nonNumericDomain |
    ./measurementScale/ordinal/nonNumericDomain |
    ./measurementScale/interval/numericDomain |
    ./measurementScale/ratio/numericDomain |
    ./measurementScale/dateTime |
    ./minValue |
    ./maxValue
  </xpath>
    </subSelector>
    </selector>
    <selector>
    <name>attributeDomainbool</name>
    <xpath>/eml/dataset/*/attributeList/attribute |
    /*/contentInfo/*/dimension/MI_Band |
    /*/contentInfo/*/dimension/MD_Band 
  </xpath>
    <subSelector>
    <!-- if attributes are present, one of these domain types must be present (even dateTimeDomain, which is optional in the EML spec) -->
    <name>domain</name>
    <xpath>
    boolean(./measurementScale/nominal/nonNumericDomain or
    ./measurementScale/ordinal/nonNumericDomain or
    ./measurementScale/interval/numericDomain or
    ./measurementScale/ratio/numericDomain or
    ./measurementScale/dateTime or
    ./minValue or
    ./maxValue)
  </xpath>
    </subSelector>
    </selector>
    <selector>
    <name>attributeName</name>
    <xpath>
    /eml/dataset/*/attributeList/attribute |
    /*/contentInfo/*/dimension/MI_Band |
    /*/contentInfo/*/dimension/MD_Band
  </xpath>
    <subSelector>
    <name>name</name>
    <!-- Multiple paths may be present and return values, but we need just one -->
    <xpath>
    (./attributeName/text()[normalize-space()] | 
       ./sequenceIdentifier/MemberName/aName/*/text()[normalize-space()] |
       ./descriptor/*/text()[normalize-space()])[1]
  </xpath>
    </subSelector>
    </selector>
    <dialect>
    <name>DataCite 4</name>
    <xpath>boolean(/*[local-name() = 'resource'])</xpath>
    </dialect>
    <dialect>
    <name>Ecological Metadata Language</name>
    <xpath>boolean(/*[local-name() = 'eml'])</xpath>
    </dialect>
    <dialect>
    <name>ISO 19115 and ISO 19115-2 / ISO 19139, ISO 19139-2, ISO 19115-1, ISO 19115-3 </name>
    <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
    </dialect>
    </mdq:check>
    